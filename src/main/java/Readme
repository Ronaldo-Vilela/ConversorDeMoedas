# ü™ô Conversor de Moedas | Alura Challenge ü™ô

![Status](https://img.shields.io/badge/status-conclu√≠do-brightgreen)
![Java](https://img.shields.io/badge/Java-11%2B-blue)
![Maven](https://img.shields.io/badge/Maven-3.8%2B-red)

Este projeto √© a solu√ß√£o para o **Challenge - Conversor de Moedas** proposto pela [Alura](https://www.alura.com.br/) em parceria com a [Oracle (ONE)](https://www.oracle.com/br/education/oracle-next-education/).

A aplica√ß√£o funciona via console e permite ao usu√°rio converter valores entre Reais (BRL), as principais moedas fiduci√°rias internacionais e, como funcionalidade extra, as criptomoedas mais populares, consumindo APIs em tempo real.

---

## üöÄ Funcionalidades

O projeto cumpre todos os requisitos b√°sicos do desafio e vai al√©m, adicionando a convers√£o de criptomoedas.

### Requisitos B√°sicos (Conclu√≠dos)
* Convers√£o de Reais (BRL) para:
    * D√≥lar (USD)
    * Euro (EUR)
    * Libras Esterlinas (GBP)
    * Peso Argentino (ARS)
    * Peso Chileno (CLP)
* Convers√£o inversa (de todas as moedas acima para BRL).

### Funcionalidades Adicionais (Extras)
* Convers√£o de Reais (BRL) para Criptomoedas (Bitcoin, Ethereum, Litecoin).
* Convers√£o inversa (de Criptomoedas para BRL).
* Menu interativo e loop de execu√ß√£o para m√∫ltiplas convers√µes.
* Consumo de duas APIs distintas para cota√ß√µes em tempo real.

---

## üõ†Ô∏è Tecnologias Utilizadas

* **Java (JDK 11+)**: Linguagem principal do projeto.
* **Maven**: Gerenciamento de depend√™ncias.
* **`HttpClient` (Java 11)**: Cliente HTTP nativo do Java para realizar as requisi√ß√µes √†s APIs.
* **Gson**: Biblioteca do Google para "parsear" (converter) as respostas JSON das APIs para objetos Java.
* **APIs Externas**:
    * [**ExchangeRate-API**](https://www.exchangerate-api.com/): Utilizada para obter as cota√ß√µes das moedas fiduci√°rias.
    * [**CoinGecko API**](https://www.coingecko.com/api): Utilizada para obter as cota√ß√µes das criptomoedas.

---

## üíª Como Executar

### Pr√©-requisitos

* Java JDK 11 (ou superior) instalado.
* [Maven](https://maven.apache.org/download.cgi) instalado (ou use o Maven Wrapper da sua IDE).
* Uma **Chave de API (API Key)** da [ExchangeRate-API](https://www.exchangerate-api.com/). O plano gratuito √© suficiente.

### Passos para Execu√ß√£o

1.  **Clone o reposit√≥rio:**
    ```bash
    git clone [https://github.com/seu-usuario/seu-repositorio.git](https://github.com/seu-usuario/seu-repositorio.git)
    cd seu-repositorio
    ```
    *(Substitua pelo link do seu reposit√≥rio)*

2.  **Configure a API Key:**
    * Abra o projeto na sua IDE (ex: IntelliJ IDEA).
    * Navegue at√© o arquivo `src/main/java/ApiCliente.java`.
    * Substitua a string `"SUA_API_KEY_AQUI"` pela sua chave pessoal:
        ```java
        private static final String API_KEY = "SUA_API_KEY_AQUI";
        ```

3.  **Compile e Execute:**
    * Se estiver usando o IntelliJ, a IDE deve reconhecer o `pom.xml` e baixar o Gson automaticamente.
    * Clique com o bot√£o direito no arquivo `src/main/java/Principal.java` e selecione **"Run 'Principal.main()'"**.

---

## üïπÔ∏è Demonstra√ß√£o (Menu da Aplica√ß√£o)

Ao executar, a aplica√ß√£o exibe o seguinte menu: